package nl.ru.ai.MMJV;

import lejos.hardware.Sound;
import lejos.hardware.motor.Motor;
import lejos.robotics.subsumption.Behavior;
import lejos.utility.Delay;

public class KillingBehavior implements Behavior {

	private static final short[] GETITON = { 2349, 115, 0, 5, 1760, 165, 0, 35, 1760, 28, 0, 13, 1976, 23, 0, 18, 1760,
			18, 0, 23, 1568, 15, 0, 25, 1480, 103, 0, 18, 1175, 180, 0, 20, 1760, 18, 0, 23, 1976, 20, 0, 20, 1760, 15,
			0, 25, 1568, 15, 0, 25, 2217, 98, 0, 23, 1760, 88, 0, 33, 1760, 75, 0, 5, 1760, 20, 0, 20, 1760, 20, 0, 20,
			1976, 18, 0, 23, 1760, 18, 0, 23, 2217, 225, 0, 15, 2217, 218 };

	private static final short[] IFYOUAREHAPPY = { 262, 262, 349, 349, 349, 349, 349, 349, 330, 349, /* 10! */ 392, 262,
			262, 392, 392, 392, 392, 392, 392, 349, 392, /* 21 */ 440, 440, 440, 466, 466, 466, 466, 294, 294, 466, 466,
			440, 440, 440, 392, 349, 349, 440, 440, 392, 392, 392, 349, 330, 330, 294, 330, /* 48 */349, 349 };

	private boolean suppressed = false;
	static final int SPEED = 300;
	static final int ROTATE = 90;
	public Filter sample;
	boolean done = false;

	public KillingBehavior(Filter s) {
		this.sample = s;
	}

	public boolean takeControl() {
		return !done;
	}

	public void suppress() {
		suppressed = true;
	}

	public void play() {
		Sound.setVolume(10);
		for (int i = 0; i < GETITON.length; i += 1) {
			final short w = GETITON[i + 1];
			if (i == 10 | i == 21 | i == 48) {
				Sound.playTone(GETITON[i], 3 * w);
			} else {
				Sound.playTone(GETITON[i], w);
			}
			Sound.pause(w / 10);
			if (suppressed)
				return;
		}
	}

	public void play2() {
		Sound.setVolume(3);
		for (int i = 0; i < IFYOUAREHAPPY.length; i += 1) {
			final short w = IFYOUAREHAPPY[i + 1];
			if (i == 10 | i == 21 | i == 48) {
				Sound.playTone(IFYOUAREHAPPY[i], 3 * w);
			} else {
				Sound.playTone(IFYOUAREHAPPY[i], w);
			}
			Sound.pause(w / 10);
			if (suppressed)
				return;
		}

	}

	public void action() {
		suppressed = false;
		while (!suppressed) {
			if (sample.distanceValue() <= 0.05) {
				if (sample.redValue() > 0.27 && sample.redValue() < 0.32) {
					System.out.println("Hello worldz");
					done = true;
					Motor.B.stop();
					Motor.C.stop();
					//Motor.A.setSpeed(200);
					//Motor.A.forward();
					//Motor.A.rotate(-180);
					System.out.println("K.I.A");
					play();
					suppress();
				} else if (sample.redValue() > 0.09 && sample.redValue() < 0.011) {
					done = true;
					System.out.println("Swiggity swooty");
					Motor.B.setSpeed(SPEED);
					Motor.B.backward();
					Motor.C.setSpeed(SPEED);
					Motor.C.forward();
					play2();
					suppress();
				}
			}
			Thread.yield();
		}
		Motor.B.stop(); // clean up
		Motor.C.stop();
	}
}
