package nl.ru.ai.MMJV;

import lejos.hardware.motor.Motor;
import lejos.robotics.subsumption.Behavior;
import lejos.utility.Delay;

public class DriveForward implements Behavior {
	static final int SPEED = 200;
	static final double WHITE = 0.45;
	private boolean suppressed = false;
	public Filter sample;
	boolean done = false;

	public DriveForward(Filter s) {
		this.sample = s;
	}

	public boolean takeControl() {
		return !done;
	}

	public void suppress() {
		suppressed = true;
	}

	public void action() {
		suppressed = false;
		Motor.B.setSpeed(SPEED);
		Motor.B.forward();
		Motor.C.setSpeed(SPEED);
		Motor.C.forward();
		while (!suppressed) {
			if (sample.redValue() > WHITE) {
				done = true;
				Motor.B.setSpeed((int) (SPEED * 0.8));
				Motor.C.setSpeed((int) (SPEED * 0.8));
				Motor.B.backward();	
				Motor.C.forward();
				Delay.msDelay(1000);
				suppress();
			}
			Thread.yield();
		}
		Motor.B.stop(); // clean up
		Motor.C.stop();
	}
}
