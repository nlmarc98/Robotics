package nl.ru.ai.MMJV;

import lejos.hardware.Sound;
import lejos.hardware.motor.Motor;
import lejos.robotics.subsumption.Behavior;

public class RedFound implements Behavior {
	private boolean suppressed = false;
	private static final short[] IF_YOU_ARE_HAPPY = { 262, 262, 349, 349, 349, 349, 349, 349, 330, 349, /* 10 */ 392, 262,
			262, 392, 392, 392, 392, 392, 392, 349, 392, /* 21 */ 440, 440, 440, 466, 466, 466, 466, 294, 294, 466, 466,
			440, 440, 440, 392, 349, 349, 440, 440, 392, 392, 392, 349, 330, 330, 294, 330, /* 48 */349, 349 };
	private boolean done = false;

	public RedFound() {
	}

	public void play() {
		Sound.setVolume(20);
		for (int i = 0; i < IF_YOU_ARE_HAPPY.length; i += 1) {
			final short w = IF_YOU_ARE_HAPPY[i + 1];
			if (i == 10 | i == 21 | i == 48) {
				Sound.playTone(IF_YOU_ARE_HAPPY[i], 3 * w);
			} else {
				Sound.playTone(IF_YOU_ARE_HAPPY[i], w);
			}
			Sound.pause(w / 10);
			if (suppressed)
				return;
		}
		done = true;
	}

	@Override
	public void suppress() {
		suppressed = true;
	}

	@Override
	public void action() {
		suppressed = false;
		Motor.C.rotate(720, true);
		Motor.B.rotate(-720, true);
		play();
		while (!suppressed){
			if (done)
				suppress();
			Thread.yield();
		}
		Motor.B.stop();
		Motor.C.stop();
		System.exit(0);
	}

	@Override
	public boolean takeControl() {
		return !done;
	}
}
