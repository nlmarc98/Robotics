package nl.ru.ai.MMJV;

import lejos.hardware.motor.Motor;
import lejos.robotics.subsumption.Behavior;

public class MoveToPillar implements Behavior {
	static final double WHITE = 0.45;
	static final int SPEED = 200;
	private boolean suppressed = false;
	private Filter sample;
	private boolean done = false;

	public MoveToPillar(Filter s) {
		this.sample = s;
	}

	public boolean takeControl() {
		System.out.println(done);
		return !done;
	}

	public void suppress() {
		suppressed = true;
	}

	public void action() {
		suppressed = false;
		double dist = 10;
		double red = 0;
		while (!suppressed) {
			dist = sample.distanceValue();
			red = sample.redValue();
			if (dist >= 1) {
				Motor.B.setSpeed(SPEED);
				Motor.B.backward();
				Motor.C.setSpeed(SPEED);
				Motor.C.forward();
			} else if (dist <= 0.3 && red >= WHITE) {
				done = true;
				suppress();
			} else {
				Motor.B.setSpeed(SPEED);
				Motor.B.forward();
				Motor.C.setSpeed(SPEED);
				Motor.C.forward();
			}
			Thread.yield();
		}
		Motor.B.stop(); // clean up
		Motor.C.stop();
	}
}
